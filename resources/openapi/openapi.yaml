openapi: 3.0.0
info:
  description: API documentation for the OKO endpoints
  version: 1.0.1
  title: OKO Partners
  contact:
    email: jonas.carlsen@knowit.no
  license:
    name: Apache 2.0
    url: 'http://www.apache.org/licenses/LICENSE-2.0.html'
servers:
  - description: Actual API
    url: 'https://tcuk58u5ge.execute-api.eu-central-1.amazonaws.com/staging/backend'
tags:
  - name: reg-admin
    description: Calls available for reg admins
  - name: reuse-station
    description: Calls available for reuse station workers.
  - name: partner
    description: Calls available for partners. Can only access reports that belong to said partner.
  - name: everyone
    description: Calls available for unauthorized users
paths:
  '/partners{id}':
    get:
      tags:
        - everyone
      summary: fetches partners
      operationId: getPartner
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Partner matching ID
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Partner'
        '400':
          description: bad input parameter
        '404':
          description: Partner not found
        '500':
          description: Internal server error
    delete:
      tags:
        - reg-admin
      summary: Deletes a partner
      operationId: deletePartner
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Partner deleted successfully
        '400':
          description: Bad input parameter
        '404':
          description: ID not found
        '500':
          description: Internal server error
  /partners:
    get:
      tags:
        - everyone
      summary: Gets all partners
      operationId: getPartners
      responses:
        '200':
          description: Returns all partners
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Partner'
        '500':
          description: Internal server error
    post:
      tags:
        - reg-admin
      summary: adds a partner
      operationId: addPartner
      description: Adds a partner to the database and to keycloak. Name must be unique.
      responses:
        '200':
          description: item created
          content:
            application/json:
              schema:
                type: integer
                format: int64
                description: The DB id of the stored partner
        '400':
          description: Bad partner body
        '401':
          description: Unauthorized
        '403':
          description: Insufficient role privileges
        '409':
          description: A partner with that name already exists
        '422':
          description: Validation of partner body failed. Unprocessable entity
        '500':
          description: Internal server error
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PartnerPost'
    patch:
      tags:
        - reg-admin
        - partner
      summary: Updates a partner both in the database and in keycloak
      operationId: patchpartner
      description: |
        Updates a partner in both the database and in keycloak. ID cannot be
        changed and must correspond with an existing partner. Name must be unique.
        Partners can only update their own information.
      responses:
        '200':
          description: Partner updated
        '400':
          description: Bad request body
        '401':
          description: Unauthorized
        '403':
          description: Forbidden. Insufficient role permissions.
        '404':
          description: ID not found
        '409':
          description: A partner with that name already exists
        '422':
          description: Unprocessable request body. Validation of request body failed
        '500':
          description: Internal server error
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PartnerPatch'
  /stations:
    get:
      tags:
        - everyone
      summary: Gets all stations
      operationId: getStations
      responses:
        '200':
          description: Returns all stations
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Station'
        '500':
          description: Internal server error
    post:
      tags:
        - reg-admin
      summary: Adds a station
      operationId: addStation
      description: Adds a station to the database. Name must be unique. The stored Station object is returned if request is valid.
      responses:
        '200':
          description: item created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Station'
        '400':
          description: Bad station body
        '401':
          description: Unauthorized
        '403':
          description: Insufficient role privileges
        '409':
          description: Name conflict
        '500':
          description: Internal server error
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StationPost'
    patch:
      tags:
        - reg-admin
      summary: Updates a station
      operationId: patchStation
      description: |
        Updates a partner. ID cannot be changed and must correspond with an existing station. Name must be unique.
        The stored station object is returned if request is valid
      responses:
        '200':
          description: Station updated
        '400':
          description: Bad request body
        '401':
          description: Unauthorized
        '403':
          description: Insufficient role privileges
        '404':
          description: ID not found
        '409':
          description: Name conflict
        '500':
          description: Internal server error
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StationPatch'
  '/stations{id}':
    get:
      tags:
        - everyone
      summary: fetches stations
      operationId: getStation
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Station matching ID
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Station'
        '400':
          description: Bad input parameter
        '404':
          description: Station not found
        '500':
          description: Internal server error
    delete:
      tags:
        - reg-admin
      summary: Deletes a station
      operationId: deleteStation
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Station deleted successfully
        '400':
          description: Bad input parameter
        '401':
          description: Unauthorized
        '403':
          description: Insufficient role privileges
        '404':
          description: ID not found
        '500':
          description: Internal server error
  /reports:
    get:
      tags:
        - everyone
      summary: Gets all reports
      operationId: getReports
      description: |
        Get functionality that allows for getting reports. If called without parameters, all reports are returned.
        Each parameter that is passed will be used to filter the output. For instance, one can GET reports within
        a range by specifying from-date and to-date.
      parameters:
        - in: query
          name: event-id
          description: Get the report that corresponds to the specified event ID.
          required: false
          schema:
            type: integer
            format: int64
          example: 1
        - in: query
          name: station-id
          description: Only get reports belonging at the specified Station ID.
          required: false
          schema:
            type: integer
            format: int64
            example: 2
        - in: query
          name: partner-id
          description: Only get reports belonging to specified partner ID.
          required: false
          schema:
            type: integer
            format: int64
            example: 3
        - in: query
          name: from-date
          description: Get reports from the specified date and time.
          required: false
          schema:
            type: string
            format: date-time
            example: 2020-07-10T13:17:39.000Z
        - in: query
          name: to-date
          description: Get reports until the specified date and time.
          required: false
          schema:
            type: string
            format: date-time
            example: 2020-07-20T13:17:39.000Z
      responses:
        '200':
          description: Returns all reports
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Report'
        '500':
          description: Internal server error
    patch:
      tags:
        - reg-admin
        - reuse-station
        - partner
      summary: Sets the weight of a report
      operationId: patchWeight
      description: |
        Updates the weight of a report. When weight is updated, it's reportedDateTime field is also updated.
        Although partners can call this endpoint, they are only able to update reports that belong to their corresponding
        partner ID.
      responses:
        '200':
          description: Partner updated
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Report'
        '400':
          description: Bad request body
        '401':
          description: Unauthorized
        '403':
          description: Insufficient privileges. Is returned when a partner attempts to alter resources that they do not own.
        '404':
          description: ID not found
        '500':
          description: Internal server error
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ReportPatch'
  '/reports{id}':
    get:
      tags:
        - everyone
      summary: fetches a report
      operationId: getReport
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Report matching ID
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Report'
        '400':
          description: Bad input parameter
        '404':
          description: Report not found
        '500':
          description: Internal server error
components:
  schemas:
    PartnerPost:
      type: object
      properties:
        name:
          type: string
          example: Fretex
        description:
          type: string
          example: Lorem ipsum...
        phone:
          type: string
          example: +47 12345678
        email:
          type: string
          example: example@example.com
      required:
        - name
        - description
        - phone
        - email
    Partner:
      type: object
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
          example: Fretex
        description:
          type: string
          example: Lorem Ipsum...
        phone:
          type: string
          example: +47 12345678
        email:
          type: string
          example: example@example.com
    PartnerPatch:
      type: object
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
          example: Fretex
        description:
          type: string
          example: Lorem Ipsum...
        phone:
          type: string
          example: +47 12345678
        email:
          type: string
          example: example@example.com
      required:
        - id
    Report:
      type: object
      properties:
        reportID:
          type: integer
          format: int64
          example: 1
        eventID:
          type: integer
          format: int64
          example: 1
        partnerID:
          type: integer
          format: int64
          example: 2
        stationID:
          type: integer
          format: int64
          example: 4
        startDateTime:
          type: string
          format: date-time
          example: 2020-07-13T15:00:00.000Z
        endDateTime:
          type: string
          format: date-time
          example: 2020-07-13T17:00:00.000Z
        weight:
          type: integer
          format: int64
        reportedDateTime:
          type: string
          format: date-time
          example: 2020-07-13T17:15:33.000Z
    ReportPatch:
      type: object
      properties:
        id:
          type: integer
          format: int64
          example: 1
        weight:
          type: integer
          format: int64
          example: 50
      required:
        - id
        - weight
    Station:
      type: object
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
          example: Haraldrud
        openingTime:
          type: string
          description: 'A string that conforms to the ISO8601 standard for displaying time. The format is HH:MM:SS'
          example: '09:00:00Z'
        closingTime:
          type: string
          description: 'A string that conforms to the ISO8601 standard for displaying time. The format is HH:MM:SS'
          example: '20:00:00Z'
    StationPost:
      type: object
      properties:
        name:
          type: string
          description: Must be unique
          example: Ryen
        openingTime:
          type: string
          description: 'A string that conforms to the ISO8601 standard for displaying time. The format is HH:MM:SS'
          example: '08:00:00Z'
        closingTime:
          type: string
          description: 'A string that conforms to the ISO8601 standard for displaying time. The format is HH:MM:SS'
          example: '21:00:00Z'
      required:
        - name
        - openingTime
        - closingTime
    StationPatch:
      type: object
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
          description: Must be unique
          example: Ryen
        openingTime:
          type: string
          description: 'A string that conforms to the ISO8601 standard for displaying time. The format is HH:MM:SS'
          example: '08:00:00Z'
        closingTime:
          type: string
          description: 'A string that conforms to the ISO8601 standard for displaying time. The format is HH:MM:SS'
          example: '21:00:00Z'
      required:
        - id
