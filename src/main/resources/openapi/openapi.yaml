openapi: 3.0.0
info:
  description: API documentation for the OKO endpoints
  version: 1.0.1
  title: OKO API
  contact:
    email: jonas.carlsen@knowit.no
  license:
    name: Apache 2.0
    url: 'http://www.apache.org/licenses/LICENSE-2.0.html'
servers:
  - description: Actual API
    url: 'https://tcuk58u5ge.execute-api.eu-central-1.amazonaws.com/staging/backend'
tags:
  - name: partnere
    description: Calls available in  the /partnere/ endpoint
  - name: uttak
    description: Calls available in the /uttak/ endpoint
  - name: uttaksdata
    description: Calls available in the /uttaksdata/ endpoint
  - name: stasjoner
    description: Calls available in the /stasjoner/ endpoint
  - name: pickups
    description: Calls available in the /pickups/ endpoint
  - name: requests
    description: Calls available in the /requests/ endpoint
paths:
  '/partnere/{id}':
    get:
      tags:
        - partnere
      summary: Get a partner with the given id
      operationId: getPartner
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Partner matching ID
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Partner'
        '400':
          description: Bad input parameter
        '404':
          description: Partner not found
        '500':
          description: Internal server error
    delete:
      tags:
        - partnere
      summary: Deletes a partner
      operationId: deletePartner
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Partner deleted successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Partner'
        '400':
          description: Bad input parameter
        '401':
          description: Unauthorized
        '403':
          description: Insufficient role privileges
        '404':
          description: ID not found
        '500':
          description: Internal server error
  /partnere:
    get:
      tags:
        - partnere
      summary: Gets all partnere
      operationId: getPartnere
      parameters:
        - in: query
          name: name
          schema:
            type: string
            example: Fretex
      responses:
        '200':
          description: Returns all partnere
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Partner'
        '500':
          description: Internal server error
    post:
      tags:
        - partnere
      summary: adds a partner
      operationId: addPartner
      description: Adds a partner to the database and to keycloak. Name must be unique.
      responses:
        '200':
          description: item created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Partner'
        '400':
          description: Bad partner body
        '401':
          description: Unauthorized
        '403':
          description: Insufficient role privileges
        '409':
          description: A partner with that name already exists
        '422':
          description: Validation of partner body failed. Unprocessable entity
        '500':
          description: Internal server error
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PartnerPost'
    patch:
      tags:
        - partnere
      summary: Updates a partner both in the database and in keycloak
      operationId: patchpartner
      description: |
        Updates a partner in both the database and in keycloak. ID cannot be
        changed and must correspond with an existing partner. Name must be unique.
        Partnere can only update their own information.
      responses:
        '200':
          description: Partner updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Partner'
        '400':
          description: Bad uttaksforesporsel body
        '401':
          description: Unauthorized
        '403':
          description: Forbidden. Insufficient role permissions.
        '404':
          description: ID not found
        '409':
          description: A partner with that name already exists
        '422':
          description: Unprocessable uttaksforesporsel body. Validation of uttaksforesporsel body failed
        '500':
          description: Internal server error
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PartnerPatch'
  /stasjoner:
    get:
      tags:
        - stasjoner
      summary: Gets all stasjoner
      operationId: getStasjoner
      responses:
        '200':
          description: Returns all stasjoner
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Stasjon'
        '500':
          description: Internal server error
    post:
      tags:
        - stasjoner
      summary: Adds a stasjon
      operationId: addStasjon
      description: Adds a stasjon to the database. Name must be unique. The stored Stasjon object is returned if uttaksforesporsel is valid.
      responses:
        '200':
          description: item created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Stasjon'
        '400':
          description: Bad stasjon body
        '401':
          description: Unauthorized
        '403':
          description: Insufficient role privileges
        '409':
          description: Name conflict
        '500':
          description: Internal server error
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StasjonPost'
    patch:
      tags:
        - stasjoner
      summary: Updates a stasjon
      operationId: patchStasjon
      description: |
        Updates a partner. ID cannot be changed and must correspond with an existing stasjon. Name must be unique.
        The stored stasjon object is returned if request is valid. WARNING: PATCHING HOURS WILL OVERWRITE PREVIOUS HOURS.
      responses:
        '200':
          description: Stasjon updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Stasjon'
        '400':
          description: Bad uttaksforesporsel body
        '401':
          description: Unauthorized
        '403':
          description: Insufficient role privileges
        '404':
          description: ID not found
        '409':
          description: Name conflict
        '500':
          description: Internal server error
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/StasjonPatch'
  '/stasjoner{id}':
    get:
      tags:
        - stasjoner
      summary: fetches stasjoner
      operationId: getStasjon
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Stasjon matching ID
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Stasjon'
        '400':
          description: Bad input parameter
        '404':
          description: Stasjon not found
        '500':
          description: Internal server error
    delete:
      tags:
        - stasjoner
      summary: Deletes a stasjon
      operationId: deleteStasjon
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Stasjon deleted successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Stasjon'
        '400':
          description: Bad input parameter
        '401':
          description: Unauthorized
        '403':
          description: Insufficient role privileges
        '404':
          description: ID not found
        '500':
          description: Internal server error
  /uttaksdata:
    get:
      tags:
        - uttaksdata
      summary: Gets all uttaksdata
      operationId: getReports
      description: |
        Get functionality that allows for getting uttaksdata. If called without parameters, all uttaksdata are returned.
        Each parameter that is passed will be used to filter the output. For instance, one can GET uttaksdata within
        a range by specifying from-date and to-date.
      parameters:
        - in: query
          name: uttakId
          description: Get the uttaksdata that corresponds to the specified uttak ID.
          required: false
          schema:
            type: integer
            format: int64
          example: 1
        - in: query
          name: stasjonId
          description: Only get uttaksdata belonging at the specified Stasjon ID.
          required: false
          schema:
            type: integer
            format: int64
            example: 2
        - in: query
          name: partnerId
          description: Only get uttaksdata belonging to specified partner ID.
          required: false
          schema:
            type: integer
            format: int64
            example: 3
        - in: query
          name: fromDate
          description: Get uttaksdata from the specified date and time.
          required: false
          schema:
            type: string
            format: date-time
            example: '2020-07-10T13:17:39Z'
        - in: query
          name: toDate
          description: Get uttaksdata until the specified date and time.
          required: false
          schema:
            type: string
            format: date-time
            example: '2020-07-20T13:17:39Z'
      responses:
        '200':
          description: Returns all uttaksdata
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Report'
        '500':
          description: Internal server error
    patch:
      tags:
        - uttaksdata
      summary: Sets the weight of a uttaksdata
      operationId: patchWeight
      description: |
        Updates the weight of a uttaksdata. When weight is updated, it's uttaksdataedDateTime field is also updated.
        Although partnere can call this endpoint, they are only able to update uttaksdata that belong to their corresponding
        partner ID.
      responses:
        '200':
          description: Partner updated
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Report'
        '400':
          description: Bad uttaksforesporsel body
        '401':
          description: Unauthorized
        '403':
          description: Insufficient privileges. Is returned when a partner attempts to alter resources that they do not own.
        '404':
          description: ID not found
        '500':
          description: Internal server error
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ReportPatch'
  '/uttaksdata{id}':
    get:
      tags:
        - uttaksdata
      summary: fetches a uttaksdata
      operationId: getReport
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Report matching ID
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Report'
        '400':
          description: Bad input parameter
        '404':
          description: Report not found
        '500':
          description: Internal server error
  /uttak:
    get:
      tags:
        - uttak
      summary: Gets uttak
      operationId: getUttak
      parameters:
        - in: query
          name: uttakId
          schema:
            type: integer
            format: int64
          example: 1
        - in: query
          name: gjentakelsesRegelId
          schema:
            type: integer
            format: int64
          example: 1
        - in: query
          name: fromDate
          schema:
            type: string
            format: date-time
          example: '2020-07-13T15:00:00Z'
        - in: query
          name: toDate
          schema:
            type: string
            format: date-time
          example: '2020-07-20T15:00:00Z'
        - in: query
          name: partnerId
          schema:
            type: integer
            format: int64
          example: 1
        - in: query
          name: stasjonId
          schema:
            type: integer
            format: int64
          example: 1
      responses:
        '200':
          description: Returns an array of all the uttak that matched the query.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Uttak'
        '400':
          description: Bad uttaksforesporsel body
        '422':
          description: Validation of uttaksforesporsel body failed. Unprocessable entity
        '500':
          description: Internal server error
    post:
      tags:
        - uttak
      summary: adds one or more uttak to the database.
      operationId: addUttak
      description: Adds one or more uttak to the database. This also creates corresponding weight uttaksdata with nulled weight.
      responses:
        '200':
          description: 'item created. Returns the created uttak. If recurring, the first uttak is returned.'
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Uttak'
        '400':
          description: Bad uttaksforesporsel body
        '401':
          description: Unauthorized
        '403':
          description: Insufficient role privileges
        '422':
          description: Validation of uttaksforesporsel body failed. Unprocessable entity
        '500':
          description: Internal server error
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UttakPost'
    patch:
      tags:
        - uttak
      summary: Updates an uttak
      operationId: patchUttak
      description: |
        Updates a singular uttak in the database.
      responses:
        '200':
          description: Updated uttak
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Uttak'
        '400':
          description: Bad uttaksforesporsel body
        '401':
          description: Unauthorized
        '403':
          description: Forbidden. Insufficient role permissions.
        '404':
          description: ID not found
        '422':
          description: Unprocessable uttaksforesporsel body. Validation of uttaksforesporsel body failed
        '500':
          description: Internal server error
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UttakPatch'
    delete:
      tags:
        - uttak
      summary: Deletes uttak
      operationId: deleteUttak
      description: |
        Deletes one or several uttak from the database. Deletion can be specified through the use of query parameters.
        Reuse stasjon workers and REG admin will be able to delete any uttak, whilst a partner only has permission to delete
        their own uttak.
      parameters:
        - in: query
          name: uttakId
          schema:
            type: integer
            format: int64
          example: 1
        - in: query
          name: gjentakelsesRegelId
          schema:
            type: integer
            format: int64
          example: 1
        - in: query
          name: fromDate
          schema:
            type: string
            format: date-time
          example: '2020-07-13T15:00:00Z'
        - in: query
          name: toDate
          schema:
            type: string
            format: date-time
          example: '2020-07-20T15:00:00Z'
        - in: query
          name: partnerId
          schema:
            type: integer
            format: int64
          example: 1
        - in: query
          name: stasjonId
          schema:
            type: integer
            format: int64
          example: 1
      responses:
        '200':
          description: Uttak(s) deleted
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Uttak'
                description: A list of deleted uttak
        '400':
          description: Bad uttaksforesporsel body
        '401':
          description: Unauthorized
        '403':
          description: Forbidden. Insufficient role permissions.
        '404':
          description: ID not found
        '422':
          description: Unprocessable uttaksforesporsel body. Validation of uttaksforesporsel body failed
        '500':
          description: Internal server error
  '/uttak/{id}':
    get:
      tags:
        - uttak
      summary: Get an uttak with the provided ID
      operationId: getUttak
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: Uttak matching ID
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Uttak'
        '400':
          description: Bad input parameter
        '404':
          description: Partner not found
        '422':
          description: Validation failed. Unprocessable entity.
        '500':
          description: Internal server error
  /pickups/:
    get:
      tags:
        - pickups
      summary: Gets pickups
      operationId: getPickups
      parameters:
        - in: query
          name: startDateTime
          schema:
            type: string
            format: date-time
          example: '2020-07-13T15:00:00Z'
        - in: query
          name: endDateTime
          schema:
            type: string
            format: date-time
          example: '2020-07-15T15:00:00Z'
        - in: query
          name: partnerId
          schema:
            type: integer
            format: int64
          example: 1
        - in: query
          name: stasjonId
          schema:
            type: integer
            format: int64
          example: 1
      responses:
        '200':
          description: Returns an array of all the pickups that matched the query.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Pickup'
        '422':
          description: Validation of uttaksforesporsel body failed. Unprocessable entity
        '500':
          description: Internal server error
    post:
      tags:
        - pickups
      summary: Adds a no.oslokommune.ombruk.pickup to the database
      operationId: postPickup
      description: Adds a no.oslokommune.ombruk.pickup to the database.
      responses:
        '200':
          description: item created. Returns the created no.oslokommune.ombruk.pickup.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Pickup'
        '400':
          description: Bad uttaksforesporsel body
        '401':
          description: Unauthorized
        '403':
          description: Insufficient role privileges
        '422':
          description: Validation of uttaksforesporsel body failed. Unprocessable entity
        '500':
          description: Internal server error
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PickupPost'
    patch:
      tags:
        - pickups
      summary: Updates a no.oslokommune.ombruk.pickup
      operationId: patchPickup
      description: 'Updates a no.oslokommune.ombruk.pickup. If chosenPartnerId is updated, an uttak is created and the no.oslokommune.ombruk.pickup is "closed".'
      responses:
        '200':
          description: Updated no.oslokommune.ombruk.pickup
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Pickup'
        '400':
          description: Bad uttaksforesporsel body
        '401':
          description: Unauthorized
        '403':
          description: Forbidden. Insufficient role permissions.
        '404':
          description: ID not found
        '422':
          description: Unprocessable uttaksforesporsel body. Validation of uttaksforesporsel body failed
        '500':
          description: Internal server error
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PickupPatch'
  '/pickups/{id}':
    get:
      tags:
        - pickups
      summary: Get a no.oslokommune.ombruk.pickup with the given id
      operationId: getPickup
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Pickup matching ID
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Pickup'
        '400':
          description: Bad input parameter
        '404':
          description: Pickup not found
        '500':
          description: Internal server error
    delete:
      tags:
        - pickups
      summary: Deletes a Pickup
      operationId: deletePickup
      parameters:
        - in: path
          name: id
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Pickup deleted successfully
        '400':
          description: Bad input parameter
        '401':
          description: Unauthorized
        '403':
          description: Insufficient role privileges
        '404':
          description: ID not found
        '422':
          description: Unprocessable entity. Validation failed.
        '500':
          description: Internal server error
  /requests/:
    get:
      tags:
        - requests
      summary: Gets requests
      operationId: getRequests
      parameters:
        - in: query
          name: pickupId
          schema:
            type: integer
            format: int64
          example: 1
          required: true
        - in: query
          name: partnerId
          schema:
            type: integer
            format: int64
          example: 1
          required: true
      responses:
        '200':
          description: Returns an array of all the requests that matched the query.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Uttaksforesporsel'
        '422':
          description: Validation of uttaksforesporsel body failed. Unprocessable entity
        '500':
          description: Internal server error
    post:
      tags:
        - requests
      summary: Adds a uttaksforesporsel to a no.oslokommune.ombruk.pickup
      operationId: postRequest
      description: Adds a uttaksforesporsel to a no.oslokommune.ombruk.pickup.
      responses:
        '200':
          description: item created. Returns the created no.oslokommune.ombruk.pickup.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Uttaksforesporsel'
        '400':
          description: Bad uttaksforesporsel body
        '401':
          description: Unauthorized
        '403':
          description: Insufficient role privileges
        '422':
          description: Validation of uttaksforesporsel body failed. Unprocessable entity
        '500':
          description: Internal server error
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UttaksforesporselPost'
    delete:
      tags:
        - requests
      summary: Deletes a uttaksforesporsel
      operationId: deleteRequest
      parameters:
        - in: query
          name: pickupId
          required: true
          schema:
            type: integer
        - in: query
          name: partnerId
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Uttaksforesporsel deleted successfully
        '400':
          description: Bad input parameter
        '401':
          description: Unauthorized
        '403':
          description: Insufficient role privileges
        '404':
          description: ID not found
        '422':
          description: Unprocessable entity. Validation failed.
        '500':
          description: Internal server error
components:
  schemas:
    PartnerPost:
      type: object
      properties:
        name:
          type: string
          example: Fretex
        description:
          type: string
          example: Lorem ipsum...
        phone:
          type: string
          example: +47 12345678
        email:
          type: string
          example: example@example.com
      required:
        - name
    Partner:
      type: object
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
          example: Fretex
        description:
          type: string
          example: Lorem Ipsum...
        phone:
          type: string
          example: +47 12345678
        email:
          type: string
          example: example@example.com
    PartnerPatch:
      type: object
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
          example: Fretex
        description:
          type: string
          example: Lorem Ipsum...
        phone:
          type: string
          example: +47 12345678
        email:
          type: string
          example: example@example.com
      required:
        - id
    Report:
      type: object
      properties:
        uttaksdataID:
          type: integer
          format: int64
          example: 1
        uttakID:
          type: integer
          format: int64
          example: 1
        partnerID:
          type: integer
          format: int64
          example: 2
        stasjon:
          $ref: '#/components/schemas/Stasjon'
        startDateTime:
          type: string
          format: date-time
          example: '2020-07-13T15:00:00Z'
        endDateTime:
          type: string
          format: date-time
          example: '2020-07-13T17:00:00Z'
        weight:
          type: integer
          format: int64
        uttaksdataedDateTime:
          type: string
          format: date-time
          example: '2020-07-13T17:15:33Z'
    ReportPatch:
      type: object
      properties:
        id:
          type: integer
          format: int64
          example: 1
        weight:
          type: integer
          format: int64
          example: 50
      required:
        - id
        - weight
    Stasjon:
      type: object
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
          example: Haraldrud
        hours:
          type: object
          description: 'Keys must be one or several of: MONDAY, TUESDAY, WEDNESDAY, THURSDAY, FRIDAY'
          additionalProperties:
            type: array
            items:
              type: string
          example:
            MONDAY:
              - '09:00:00Z'
              - '20:00:00Z'
            TUESDAY:
              - '08:00:00Z'
              - '21:00:00Z'
            WEDNESDAY:
              - '09:00:00Z'
              - '20:00:00Z'
            THURSDAY:
              - '09:00:00Z'
              - '20:00:00Z'
            FRIDAY:
              - '09:00:00Z'
              - '20:00:00Z'
    StasjonPost:
      type: object
      properties:
        name:
          type: string
          description: Must be unique
          example: Ryen
        hours:
          type: object
          description: 'Keys must be one or several of: MONDAY, TUESDAY, WEDNESDAY, THURSDAY, FRIDAY'
          additionalProperties:
            type: array
            items:
              type: string
          example:
            MONDAY:
              - '09:00:00Z'
              - '20:00:00Z'
            TUESDAY:
              - '08:00:00Z'
              - '21:00:00Z'
            WEDNESDAY:
              - '09:00:00Z'
              - '20:00:00Z'
            THURSDAY:
              - '09:00:00Z'
              - '20:00:00Z'
            FRIDAY:
              - '09:00:00Z'
              - '20:00:00Z'
      required:
        - name
    StasjonPatch:
      type: object
      properties:
        id:
          type: integer
          format: int64
        name:
          type: string
          description: Must be unique
          example: Ryen
        hours:
          type: object
          description: |
            Keys must be one or several of: "MONDAY, TUESDAY, WEDNESDAY, THURSDAY, FRIDAY". WARNING: THIS WILL OVERWRITE PREVIOUS HOURS.
          additionalProperties:
            type: array
            items:
              type: string
          example:
            MONDAY:
              - '09:00:00Z'
              - '20:00:00Z'
            TUESDAY:
              - '08:00:00Z'
              - '21:00:00Z'
            WEDNESDAY:
              - '09:00:00Z'
              - '20:00:00Z'
            THURSDAY:
              - '09:00:00Z'
              - '20:00:00Z'
            FRIDAY:
              - '09:00:00Z'
              - '20:00:00Z'
      required:
        - id
    Uttak:
      type: object
      properties:
        id:
          type: integer
          format: int64
          example: 1
        startDateTime:
          type: string
          format: date-time
          example: '2020-07-13T15:00:00Z'
        endDateTime:
          type: string
          format: date-time
          example: '2020-07-20T15:00:00Z'
        partnerId:
          $ref: '#/components/schemas/Partner'
        stasjonId:
          $ref: '#/components/schemas/Stasjon'
        gjentakelsesRegel:
          $ref: '#/components/schemas/GjentakelsesRegel'
    UttakPatch:
      type: object
      properties:
        id:
          type: integer
          format: int64
          example: 1
        startDateTime:
          type: string
          format: date-time
          example: '2020-07-13T15:00:00Z'
        endDateTime:
          type: string
          format: date-time
          example: '2020-07-20T15:00:00Z'
      required:
        - id
    UttakPost:
      type: object
      properties:
        startDateTime:
          type: string
          format: date-time
          example: '2020-07-13T15:00:00Z'
        endDateTime:
          type: string
          format: date-time
          example: '2020-07-20T15:00:00Z'
        partnerId:
          type: integer
          format: int64
          example: 1
        stasjonId:
          type: integer
          format: int64
          example: 1
        gjentakelsesRegel:
          $ref: '#/components/schemas/GjentakelsesRegelPost'
      required:
        - startDateTime
        - endDateTime
        - partnerId
        - stasjonId
    GjentakelsesRegel:
      type: object
      properties:
        id:
          type: integer
          format: int64
          example: 1
        until:
          type: string
          format: date-time
          example: '2020-07-13T15:00:00Z'
        days:
          type: array
          items:
            type: string
            enum:
              - MONDAY
              - TUESDAY
              - WEDNESDAY
              - THURSDAY
              - FRIDAY
          example:
            - MONDAY
            - TUESDAY
            - FRIDAY
        interval:
          type: integer
          format: int64
          example: 1
        count:
          type: integer
          format: int64
          example: 5
    GjentakelsesRegelPost:
      type: object
      properties:
        until:
          type: string
          format: date-time
          description: Create uttak until the specified date.
          default: null
          example: '2020-07-13T15:00:00Z'
        days:
          type: array
          items:
            type: string
            enum:
              - MONDAY
              - TUESDAY
              - WEDNESDAY
              - THURSDAY
              - FRIDAY
          description: What days the specified uttak should occur on.
          default: null
          example:
            - MONDAY
            - TUESDAY
            - FRIDAY
        interval:
          description: 'Describes at what interval an uttak should occur. Default is 1, which would mean every week.'
          default: 1
          type: integer
          format: int64
          example: 1
        count:
          type: integer
          format: int64
          description: 'Amount of times the uttak should recur. If interval is 1, a value of 5 would mean repeat for 5 weeks.'
          default: null
          example: 5
    PickupPost:
      type: object
      properties:
        startDateTime:
          type: string
          format: date-time
          example: '2020-07-13T15:00:00Z'
        endDateTime:
          type: string
          format: date-time
          example: '2020-07-20T15:00:00Z'
        description:
          type: string
          example: Hey come pick up some furniture
        stasjonId:
          type: integer
          format: int64
          example: 1
      required:
        - startDateTime
        - endDateTime
        - stasjonId
    PickupPatch:
      type: object
      properties:
        id:
          type: integer
          format: int64
          example: 5
        startDateTime:
          type: string
          format: date-time
          example: '2020-07-13T15:00:00Z'
        endDateTime:
          type: string
          format: date-time
          example: '2020-07-20T15:00:00Z'
        description:
          type: string
          example: Hey come pick up some furniture
        chosenPartnerId:
          type: integer
          format: int64
          example: 1
      required:
        - id
    Pickup:
      type: object
      properties:
        id:
          type: integer
          format: int64
          example: 5
        startDateTime:
          type: string
          format: date-time
          example: '2020-07-13T15:00:00Z'
        endDateTime:
          type: string
          format: date-time
          example: '2020-07-20T15:00:00Z'
        description:
          type: string
          example: Hey come pick up some furniture
        stasjon:
          $ref: '#/components/schemas/Stasjon'
        partner:
          $ref: '#/components/schemas/Partner'
    UttaksforesporselPost:
      type: object
      properties:
        pickupId:
          type: integer
          format: int64
          example: 1
        partnerId:
          type: integer
          format: int64
          example: 1
      required:
        - pickupId
        - partnerId
    Uttaksforesporsel:
      type: object
      properties:
        pickup:
          $ref: '#/components/schemas/Pickup'
        partner:
          $ref: '#/components/schemas/Partner'
