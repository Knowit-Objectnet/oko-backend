openapi: 3.0.0
# Added by API Auto Mocking Plugin
servers:
  - description: SwaggerHub API Auto Mocking
    url: https://virtserver.swaggerhub.com/oko8/Uttaks/1.0.0
  - description: Actual API
    url: https://tcuk58u5ge.execute-api.eu-central-1.amazonaws.com/staging/calendar/
info:
  description: API documentation for the OKO uttaks endpoint
  version: "1.0.0"
  title: OKO Calendar
  contact:
    email: jonas.carlsen@knowit.no
  license:
    name: Apache 2.0
    url: 'http://www.apache.org/licenses/LICENSE-2.0.html'
tags:
  - name: everyone
    description: Calls available for unauthorized users
paths:
  /health_check/:
    get:
      tags:
        - everyone
      summary: Check if API is up
      operationId: healthCheck
      description: "Returns a 200 if the service is up"
      responses:
        '200':
          description: Service is up
  /uttaks/{uttak_id}:
    get:
      tags:
        - everyone
      summary: Get an uttak by ID
      parameters:
        - in: path
          name: uttak_id
          schema:
            type: integer
          required: true
          description: "Numeric ID of the uttak to get"
      responses:
        '200':
          description: "Uttak matching ID"
          content:
            application/json:
              schema:
                type: object
                $ref: '#/components/schemas/Uttak'
        '400':
          description: bad input parameter
        '404':
          description: not found

  /uttaks/:
    get:
      tags:
        - everyone
      summary: fetches uttaks
      operationId: getUttaks
      description: |
        Calls without parameters returns all uttaks. Use parameters to narrow
        down search results
      parameters:
        - in: query
          name: stasjonId
          description: pass an optional stasjon id for uttaks
          required: false
          schema:
            type: integer
        - in: query
          name: partnerId
          description: pass an optional partner id for uttaks
          required: false
          schema:
            type: integer
      responses:
        '200':
          description: Search results matching criteria
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Uttak'
        '400':
          description: bad input parameter
    post:
      tags:
        - everyone
      summary: Adds a new uttak
      operationId: addUttak
      description: Adds a new uttak. Can be both recurring or single uttaks.
      responses:
        '201':
          description: Uttak created
        '400':
          description: Bad request
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PostUttakForm'
        description: Uttak to add. Omit recurrenceRule if singular uttak. The recurrence rule has to specifiy EITHER until or count. The first day of the days array in the recurrence rule has to match the start date of the uttak.
    patch:
      tags:
        - everyone
      summary: Updates a singular uttak in the database
      operationId: updateUttak
      description: |
        Updates a single uttak in the database. The only required property is the uttak ID, which cannot be updated.
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UpdateUttakForm'
      responses:
        '200':
          description: Uttak updated successfully
        '404':
          description: Uttak with specified ID does not exist
        '500':
          description: Failed to update uttak
    delete:
      tags:
        - everyone
      summary: Wipes uttaks from database
      operationId: deleteUttaks
      description: |
        Deletes all inserted uttaks and their corresponding recurrence rules
        (if any). Must pass in either uttakId or recurrence-ruleId.
      parameters:
        - in: query
          name: uttakId
          description: ID of uttak to delete
          schema:
            type: integer
            format: int64
            example: 10
        - in: query
          name: recurrenceRuleId
          description: |
            Deletes all uttaks that references the specified recurrence
            rule
          schema:
            type: integer
            format: int64
            example: 1
        - in: query
          name: fromDate
          description: Delete uttaks from specified date
          schema:
            type: string
            format: date-time
            example: "2020-07-10T12:17:39"
        - in: query
          name: toDate
          description: Delete uttaks up to and including specified date
          schema:
            type: string
            format: date-time
            example: "2020-07-27T12:17:39"
      responses:
        '200':
          description: Deleted successfully
        '404':
          description: No uttaks found
        '500':
          description: Failed to delete uttaks

components:
  schemas:
    PostUttakForm:
      type: object
      properties:
        startDateTime:
          type: string
          format: date-time
          example: "2020-07-10T12:17:39"
        endDateTime:
          type: string
          format: date-time
          example: "2020-07-10T13:17:39"
        stasjon:
          type: integer
          format: int64
          example: 1
        partner:
          type: integer
          format: int64
          example: 3
        recurrenceRule:
          $ref: '#/components/schemas/PostRecurrenceRule'

    Uttak:
      type: object
      properties:
        id:
          type: integer
          format: int64
        startDateTime:
          type: string
          format: date-time
          example: "2020-07-10T12:17:39"
        endDateTime:
          type: string
          format: date-time
          example: "2020-07-10T13:17:39"
        stasjon:
          $ref: '#/components/schemas/Stasjon'
        partner:
          $ref: '#/components/schemas/Partner'
        recurrenceRule:
          $ref: '#/components/schemas/RecurrenceRule'

    UpdateUttakForm:
      type: object
      properties:
        id:
          type: integer
          format: int64
        startDateTime:
          type: string
          format: date-time
          example: "2020-07-10T13:17:39"
        endDateTime:
          type: string
          format: date-time
          example: "2020-07-10T14:17:39"

    Stasjon:
      type: object
      properties:
        id:
          type: integer
          format: int64
          example: 1
        name:
          type: string
          example: "Haraldrud"

    Partner:
      type: object
      properties:
        id:
          type: integer
          format: int64
          example: 2
        name:
          type: string
          example: "Maritastiftelsen"

    PostRecurrenceRule:
      type: object
      properties:
        id:
          type: integer
          format: int64
          example: 1
          readOnly: true
      additionalProperties:
        $ref: '#/components/schemas/RecurrenceRule'

    RecurrenceRule:
      type: object
      properties:
        until:
          type: string
          format: date-time
          example: "2020-07-13T15:00:00"
        count:
          type: integer
          format: int64
          example: 5
        interval:
          type: integer
          format: int64
          example: 2
        days:
          $ref: '#/components/schemas/DaysArray'

    DaysArray:
      type: array
      items:
        type: string
      example: ["MONDAY", "TUESDAY", "FRIDAY"]
